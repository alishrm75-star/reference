name: Build full KB previews

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-index:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare folders
        run: |
          mkdir -p kb/previews_full
          echo '{"files":[]}' > kb/manifest.json

      - name: Generate full previews (+split big)
        shell: bash
        run: |
          set -euo pipefail

          is_text () {
            case "${1,,}" in
              *.html|*.har|*.json|*.md|*.css|*.js|*.ts|*.tsx|*.svg|*.txt) return 0 ;;
              *) return 1 ;;
            esac
          }

          sanitize () {
            # заменяем / на __ чтобы получилось имя файла
            echo "${1//\//__}"
          }

          add_manifest () {
            local path="$1" size="$2" sha="$3" parts_json="$4"
            # аккуратно добавляем объект в массив files
            jq --arg p "$path" --arg s "$size" --arg h "$sha" \
               --argjson parts "$parts_json" \
               '.files += [{"path":$p,"size":($s|tonumber),"sha256":$h,"parts":$parts}]' \
               kb/manifest.json > kb/.manifest.tmp && mv kb/.manifest.tmp kb/manifest.json
          }

          # размер части ~400KB (можно увеличить до 800000 при необходимости)
          PART_SIZE=400000

          while IFS= read -r path; do
            if ! is_text "$path"; then
              continue
            fi

            size=$(wc -c < "$path" | tr -d ' ')
            sha=$(sha256sum "$path" | awk '{print $1}')
            base="kb/previews_full/$(sanitize "$path")"

            if [ "$size" -le "$PART_SIZE" ]; then
              # пишем одним markdown-файлом
              lang="${path##*.}"
              {
                echo "### $path"
                echo
                echo '```'"$lang"
                cat "$path"
                echo
                echo '```'
              } > "${base}.md"
              parts='[{"file":"'"${base##kb/}/"'.md'\"'}]'
            else
              # режем на части по размеру
              tmpdir=$(mktemp -d)
              split -b "$PART_SIZE" --numeric-suffixes=1 --suffix-length=3 "$path" "$tmpdir/part_"
              parts="["
              n=0
              for p in "$tmpdir"/part_*; do
                n=$((n+1))
                idx=$(printf "%03d" "$n")
                out="${base}.part${idx}.md"
                lang="${path##*.}"
                {
                  echo "### $path (part ${idx})"
                  echo
                  echo '```'"$lang"
                  cat "$p"
                  echo
                  echo '```'
                } > "$out"
                rel="${out#kb/}"
                parts="${parts}{\"file\":\"$rel\"},"
              done
              parts="${parts%,}]"
              rm -rf "$tmpdir"
            fi

            add_manifest "$path" "$size" "$sha" "$parts"
          done < <(git ls-files)

      - name: Commit previews & manifest
        run: |
          git config user.name "kb-bot"
          git config user.email "kb-bot@users.noreply.github.com"
          git add kb/manifest.json kb/previews_full/ || true
          git commit -m "chore(kb): update full previews & manifest" || echo "nothing to commit"
          git push || true
