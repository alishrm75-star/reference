name: Build KB coverage report

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure kb
        run: mkdir -p kb

      - name: Coverage script
        shell: bash
        run: |
          node - <<'EOF'
          const fs = require('node:fs');
          const path = require('node:path');

          const readJson = p => JSON.parse(fs.readFileSync(p,'utf8'));
          const list = (dir) => {
            const out=[]; const rec=(d)=>{ if(!fs.existsSync(d)) return;
              for(const n of fs.readdirSync(d,{withFileTypes:true})){
                const p=path.join(d,n.name);
                if(n.isDirectory()) rec(p); else out.push(p.replace(/\\/g,'/'));
              }}; rec(dir); return out;
          };

          const repoFiles = list(process.cwd());
          const manifestPath = path.join('kb','manifest.json');
          const hasManifest = fs.existsSync(manifestPath);
          const manifestFiles = hasManifest ? new Set(readJson(manifestPath).files.map(f=>f.path)) : new Set();

          const pages = list('pages').filter(f=>/\.(html)$/i.test(f));
          const flows = list('flows').filter(f=>/\.(har)$/i.test(f));
          const required = [...pages, ...flows];

          const covered = required.filter(f=>manifestFiles.has(f));
          const missing = required.filter(f=>!manifestFiles.has(f));
          const pct = required.length ? Math.round(100*covered.length/required.length) : 0;

          let md = `# Coverage — полнота индексации reference\n\n`;
          md += `Всего важных файлов (HTML+HAR): **${required.length}**\n\n`;
          md += `Покрыто превью: **${covered.length}**  \n`;
          md += `Покрытие: **${pct}%**\n\n`;

          if (missing.length) {
            md += `## Не попали в манифест (${missing.length})\n`;
            for (const f of missing.sort()) md += `- \`${f}\`\n`;
            md += `\n`;
          } else {
            md += `✅ Все HTML/HAR попали в \`kb/manifest.json\`.\n`;
          }

          fs.writeFileSync(path.join('kb','coverage.md'), md);
          console.log('Wrote kb/coverage.md');
          EOF

      - name: Commit coverage
        run: |
          git config user.name "kb-bot"
          git config user.email "kb-bot@users.noreply.github.com"
          git add kb/coverage.md || true
          git commit -m "chore(kb): coverage report" || echo "nothing to commit"
          git push || true
